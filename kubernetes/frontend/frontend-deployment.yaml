# # apiVersion: apps/v1
# # kind: Deployment
# # metadata:
# #   annotations:
# #     kompose.cmd: kompose convert
# #     kompose.version: 1.22.0 (955b78124)
# #   creationTimestamp: null
# #   labels:
# #     io.kompose.service: frontend
# #   name: frontend
# # spec:
# #   replicas: 1
# #   selector:
# #     matchLabels:
# #       io.kompose.service: frontend
# #   strategy: {}
# #   template:
# #     metadata:
# #       annotations:
# #         kompose.cmd: kompose convert
# #         kompose.version: 1.22.0 (955b78124)
# #         sidecar.istio.io/statsInclusionPrefixes: cluster.outbound,cluster_manager,listener_manager,http_mixer_filter,tcp_mixer_filter,server,cluster.xds-grp,listener,connection_manager
# #         sidecar.istio.io/statsInclusionRegexps: http.*
# #       creationTimestamp: null
# #       labels:
# #         io.kompose.service: frontend
# #     spec:
# #       containers:
# #         - command:
# #             - frontend
# #           image: igorrudyk1/hotelreservation:latest
# #           name: hotel-reserv-frontend
# #           ports:
# #             - containerPort: 5000
# #           resources:
# #             requests:
# #               cpu: 100m
# #             limits:
# #               cpu: 1000m
# #       restartPolicy: Always
# # status: {}



# # apiVersion: apps/v1
# # kind: Deployment
# # metadata:
# #   annotations:
# #     kompose.cmd: kompose convert
# #     kompose.version: 1.22.0 (955b78124)
# #   creationTimestamp: null
# #   labels:
# #     io.kompose.service: frontend
# #   name: frontend
# # spec:
# #   replicas: 1
# #   selector:
# #     matchLabels:
# #       io.kompose.service: frontend
# #   strategy: {}
# #   template:
# #     metadata:
# #       annotations:
# #         kompose.cmd: kompose convert
# #         kompose.version: 1.22.0 (955b78124)
# #         sidecar.istio.io/statsInclusionPrefixes: cluster.outbound,cluster_manager,listener_manager,http_mixer_filter,tcp_mixer_filter,server,cluster.xds-grp,listener,connection_manager
# #         sidecar.istio.io/statsInclusionRegexps: http.*
# #       creationTimestamp: null
# #       labels:
# #         io.kompose.service: frontend
# #     spec:
# #       containers:
# #         - command:
# #             - frontend
# #           image: igorrudyk1/hotelreservation:latest
# #           name: hotel-reserv-frontend
# #           ports:
# #             - containerPort: 5000
# #           resources:
# #             requests:
# #               cpu: 100m
# #             limits:
# #               cpu: 1000m
# #           env:
# #             - name: JAEGER_AGENT_HOST
# #               value: "jaeger"   # Ensure this is the correct name of the Jaeger agent service in your cluster
# #             - name: JAEGER_AGENT_PORT
# #               value: "6831"     # Default Jaeger agent UDP port
# #             - name: JAEGER_SAMPLER_TYPE
# #               value: "const"    # Use "const" sampler to trace 100% of requests
# #             - name: JAEGER_SAMPLER_PARAM
# #               value: "1"        # 1 means trace 100% of requests (adjust if you want lower sampling)
# #       restartPolicy: Always
# # status: {}







# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   annotations:
#     kompose.cmd: kompose convert
#     kompose.version: 1.22.0 (955b78124)
#   creationTimestamp: null
#   labels:
#     io.kompose.service: frontend
#   name: frontend
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       io.kompose.service: frontend
#   strategy: {}
#   template:
#     metadata:
#       annotations:
#         kompose.cmd: kompose convert
#         kompose.version: 1.22.0 (955b78124)
#         sidecar.istio.io/statsInclusionPrefixes: cluster.outbound,cluster_manager,listener_manager,http_mixer_filter,tcp_mixer_filter,server,cluster.xds-grp,listener,connection_manager
#         sidecar.istio.io/statsInclusionRegexps: http.*
#       creationTimestamp: null
#       labels:
#         io.kompose.service: frontend
#     spec:
#       containers:
#         - command:
#             - frontend
#           image: igorrudyk1/hotelreservation:latest
#           name: hotel-reserv-frontend
#           ports:
#             - containerPort: 5000
#           resources:
#             requests:
#               cpu: 100m
#             limits:
#               cpu: 1000m
#           env:
#             - name: JAEGER_ENDPOINT
#               value: "http://jaeger:14268/api/traces"
#             - name: JAEGER_AGENT_HOST
#               value: "jaeger"
#             - name: JAEGER_AGENT_PORT
#               value: "6831"
#             - name: JAEGER_SAMPLER_TYPE
#               value: "const"
#             - name: JAEGER_SAMPLER_PARAM
#               value: "1"
#             - name: JAEGER_REPORTER_LOG_SPANS
#               value: "true"
#             - name: JAEGER_SERVICE_NAME
#               value: "frontend"
#             # OpenTelemetry configuration in case the app uses OTLP
#             - name: OTEL_EXPORTER_OTLP_ENDPOINT
#               value: "http://jaeger:4317"
#             - name: OTEL_EXPORTER_OTLP_PROTOCOL
#               value: "grpc"
#             - name: OTEL_TRACES_SAMPLER
#               value: "always_on"
#       restartPolicy: Always
# status: {}



apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: frontend
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
        sidecar.istio.io/statsInclusionPrefixes: cluster.outbound,cluster_manager,listener_manager,http_mixer_filter,tcp_mixer_filter,server,cluster.xds-grp,listener,connection_manager
        sidecar.istio.io/statsInclusionRegexps: http.*
      creationTimestamp: null
      labels:
        io.kompose.service: frontend
    spec:
      containers:
        - command:
            - frontend
          image: igorrudyk1/hotelreservation:latest
          name: hotel-reserv-frontend
          ports:
            - containerPort: 5000
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 1000m
          env:
            # OpenTelemetry configuration - primary configuration
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://jaeger:4317"
            - name: OTEL_EXPORTER_OTLP_INSECURE
              value: "true"
            - name: OTEL_TRACES_EXPORTER
              value: "otlp"
            - name: OTEL_PROPAGATORS
              value: "tracecontext,baggage,b3"
            - name: OTEL_SERVICE_NAME
              value: "frontend"
            - name: OTEL_TRACES_SAMPLER
              value: "always_on"
            # Jaeger configuration - fallback
            - name: JAEGER_ENDPOINT
              value: "http://jaeger:14268/api/traces"
            - name: JAEGER_AGENT_HOST
              value: "jaeger"
            - name: JAEGER_AGENT_PORT
              value: "6831"
            - name: JAEGER_SAMPLER_TYPE
              value: "const"
            - name: JAEGER_SAMPLER_PARAM
              value: "1"
            - name: JAEGER_REPORTER_LOG_SPANS
              value: "true"
            - name: JAEGER_SERVICE_NAME
              value: "frontend"
            - name: JAEGER_DISABLED
              value: "false"
      restartPolicy: Always
status: {}